# ---- Base Stage ----
# Use a Node.js version that is compatible with your project (e.g., Node 20)
FROM node:20-alpine AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

# Set the working directory
WORKDIR /app

# ---- Dependencies Stage ----
FROM base AS deps
# Copy only the necessary package manager files
COPY pnpm-lock.yaml ./
COPY package.json ./
# Install dependencies using pnpm
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile

# ---- Prisma Stage ----
# This stage generates the Prisma client based on your schema
FROM deps AS prisma
COPY prisma ./prisma/
# Generate the Prisma client
RUN pnpm prisma:generate

# ---- Build Stage ----
# This stage builds the Nuxt application
FROM prisma AS build
# Copy all source files
COPY . .
# Build the application
# The output will be in the .output directory
RUN pnpm build

# ---- Production Stage ----
# This is the final, small, and optimized image
FROM base AS production
# Copy the built output from the build stage
COPY --from=build /app/.output ./.output
# Copy production dependencies from the deps stage
COPY --from=deps /app/node_modules ./node_modules

# Set the host and port for the production server
ENV HOST=0.0.0.0
ENV PORT=3000
EXPOSE 3000

# Set the command to start the application
# This runs the production-ready Node.js server generated by Nuxt
CMD ["node", ".output/server/index.mjs"]
